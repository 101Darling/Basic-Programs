# Author: Darling Ngoh
# Date:9/28/23
'''
Description of Program:
that takes an input list of integers
...and sorts it in ascending order using the Quick Sort algorithm
'''

def quick_sort(arr, start, end):
    if start < end:
        print("------ Quick sorting from index:", start, " to ", end, "-----")

        print("Array segment before partitioning:", *(arr[start:end + 1]), sep = " ",end = " ")

        #attributing pivot index using the partition function
        pivot_index = partition(arr, start, end)

        print(", Pivot:", arr[pivot_index])

        print("Array segment after partitioning:", *(arr[start:end + 1]), sep = " ")
        print("\n")

        # Recursively sort the sub-arrays on both sides of the pivot
        quick_sort(arr, start, pivot_index - 1)
        quick_sort(arr, pivot_index + 1, end)
        
def partition(arr, low, high):
    # Choose the rightmost element as the pivot
    pivot = arr[high]

    # Initialize the index of the smaller element
    i = low - 1

    # Traverse through all elements in the array
    for j in range(low, high):
        # If the current element is smaller than or equal to the pivot
        if arr[j] <= pivot:
            # Swap arr[i+1] and arr[j]
            i = i + 1
            arr[i], arr[j] = arr[j], arr[i]

    # Swap arr[i+1] and the pivot (arr[high])
    arr[i + 1], arr[high] = arr[high], arr[i + 1]

    return i + 1



arr = [11, 12, 1, 9, 6, 5, 4, 7]
quick_sort(arr, 0, len(arr)-1)
print('The final sorted array', arr)
